/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Modelo.JugadoresHumanosTXT;
import static Modelo.JugadoresHumanosTXT.registrarJugador;
import Modelo.NombresComputadoraTXT;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Jimmy y Ian
 */
public class PantallaInicio extends javax.swing.JFrame {

    /**
     * Creates new form PantallaInicio
     */
    public PantallaInicio() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Pantalla Inicio Domino ");

        // Configurar los radio botones
        configurarRadioBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        rbg_selecciondejugadores = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_salirinicio = new javax.swing.JButton();
        btn_pantallainformacion = new javax.swing.JButton();
        txt_puntos = new javax.swing.JTextField();
        btn_iniciar = new javax.swing.JButton();
        btn_cargarpartida = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txt_alias1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_fecha1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_alias2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_fecha2 = new javax.swing.JTextField();
        rb_2jugadores = new javax.swing.JRadioButton();
        rb_maquina = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel3.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Pantallainicio (1).png"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4);
        jPanel4.setBounds(0, 0, 390, 570);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Jugador : 1");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(400, 110, 70, 16);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Jugador : 2");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(400, 280, 70, 16);

        jLabel1.setFont(new java.awt.Font("Snap ITC", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Domino Latina 2.4");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(470, 10, 280, 32);

        jLabel5.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Definir Puntuación:");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(510, 400, 160, 19);

        btn_salirinicio.setBackground(new java.awt.Color(0, 0, 204));
        btn_salirinicio.setForeground(new java.awt.Color(255, 255, 255));
        btn_salirinicio.setText("Salir");
        btn_salirinicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirinicioActionPerformed(evt);
            }
        });
        jPanel3.add(btn_salirinicio);
        btn_salirinicio.setBounds(640, 540, 120, 23);

        btn_pantallainformacion.setBackground(new java.awt.Color(0, 0, 204));
        btn_pantallainformacion.setForeground(new java.awt.Color(255, 255, 255));
        btn_pantallainformacion.setText("Pantalla información");
        btn_pantallainformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pantallainformacionActionPerformed(evt);
            }
        });
        jPanel3.add(btn_pantallainformacion);
        btn_pantallainformacion.setBounds(430, 540, 150, 23);

        txt_puntos.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jPanel3.add(txt_puntos);
        txt_puntos.setBounds(530, 430, 110, 25);

        btn_iniciar.setBackground(new java.awt.Color(0, 0, 204));
        btn_iniciar.setForeground(new java.awt.Color(255, 255, 255));
        btn_iniciar.setText("Iniciar partida");
        btn_iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_iniciarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_iniciar);
        btn_iniciar.setBounds(430, 480, 150, 23);

        btn_cargarpartida.setBackground(new java.awt.Color(0, 0, 153));
        btn_cargarpartida.setForeground(new java.awt.Color(255, 255, 255));
        btn_cargarpartida.setText("Cargar Partida");
        btn_cargarpartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cargarpartidaActionPerformed(evt);
            }
        });
        jPanel3.add(btn_cargarpartida);
        btn_cargarpartida.setBounds(640, 480, 120, 23);

        jLabel6.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Alias:");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(450, 150, 70, 19);

        txt_alias1.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jPanel3.add(txt_alias1);
        txt_alias1.setBounds(410, 170, 120, 25);

        jLabel7.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha de Nacimiento:");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(630, 150, 160, 19);

        txt_fecha1.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jPanel3.add(txt_fecha1);
        txt_fecha1.setBounds(640, 170, 140, 25);

        jLabel8.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Alias:");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(450, 320, 50, 19);

        txt_alias2.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        txt_alias2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_alias2ActionPerformed(evt);
            }
        });
        jPanel3.add(txt_alias2);
        txt_alias2.setBounds(410, 350, 120, 25);

        jLabel9.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Fecha de Nacimiento:");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(630, 320, 160, 19);

        txt_fecha2.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jPanel3.add(txt_fecha2);
        txt_fecha2.setBounds(640, 350, 140, 25);

        rbg_selecciondejugadores.add(rb_2jugadores);
        rb_2jugadores.setText("2 Jugadores");
        jPanel3.add(rb_2jugadores);
        rb_2jugadores.setBounds(470, 80, 110, 21);

        rbg_selecciondejugadores.add(rb_maquina);
        rb_maquina.setText("Maquina");
        jPanel3.add(rb_maquina);
        rb_maquina.setBounds(640, 80, 90, 21);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Seleccione el Modo de Juego ");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(490, 50, 280, 16);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void configurarRadioBotones() {
        // Listener para el radio botón de 2 jugadores
        rb_2jugadores.addActionListener(evt -> {
            habilitarCamposJugador2(true);
        });

        // Listener para el radio botón de jugar contra la máquina
        rb_maquina.addActionListener(evt -> {
            habilitarCamposJugador2(false);
        });
    }

    private void habilitarCamposJugador2(boolean habilitar) {
        txt_alias2.setEnabled(habilitar);
        txt_fecha2.setEnabled(habilitar);

        if (!habilitar) {
            // Limpiar los campos de texto cuando se deshabiliten
            txt_alias2.setText("");
            txt_fecha2.setText("");
        }
    }
    private void btn_salirinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirinicioActionPerformed
        // TODO add your handling code here:

        System.exit(0);
    }//GEN-LAST:event_btn_salirinicioActionPerformed

    private void btn_pantallainformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pantallainformacionActionPerformed
        // TODO add your handling code here:

        PantallaInicio PI = new PantallaInicio();
        PI.setVisible(false);
        dispose();

        PantallaAcercade PA = new PantallaAcercade();
        PA.setVisible(true);
    }//GEN-LAST:event_btn_pantallainformacionActionPerformed

    private void btn_iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_iniciarActionPerformed
        boolean esDosJugadores = rb_2jugadores.isSelected();
    boolean esContraMaquina = rb_maquina.isSelected();

    if (!esDosJugadores && !esContraMaquina) {
        JOptionPane.showMessageDialog(this, "Seleccione un modo de juego.");
        return;
    }

    String alias1 = txt_alias1.getText().trim();
    String fechaNacimiento1 = txt_fecha1.getText().trim();
    String puntajeStr = txt_puntos.getText().trim();
    String alias2;
    String fechaNacimiento2;

    if (puntajeStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese el puntaje para la partida.");
        return;
    }

    if (!esNumeroEntero(puntajeStr)) {
        JOptionPane.showMessageDialog(this, "El puntaje debe ser un número entero.");
        return;
    }

    int puntaje = Integer.parseInt(puntajeStr);

    if (esDosJugadores) {
        alias2 = txt_alias2.getText().trim();
        fechaNacimiento2 = txt_fecha2.getText().trim();

        if (alias1.isEmpty() || alias2.isEmpty() || fechaNacimiento1.isEmpty() || fechaNacimiento2.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete toda la información para ambos jugadores.");
            return;
        }

        if (!esFechaValida(fechaNacimiento1) || !esFechaValida(fechaNacimiento2)) {
            JOptionPane.showMessageDialog(this, "La fecha de nacimiento debe estar en formato dd/MM/yyyy.");
            return;
        }

        // Guardar la información en el archivo
        try {
            JugadoresHumanosTXT.registrarJugador(alias1, alias1, fechaNacimiento1, "Humano");
            JugadoresHumanosTXT.registrarJugador(alias2, alias2, fechaNacimiento2, "Humano");
            JugadoresHumanosTXT.registrarPartida(alias1, alias2, puntaje);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar la información en el archivo.");
            e.printStackTrace();
        }

        JOptionPane.showMessageDialog(this, "Partida iniciada con dos jugadores humanos.\n"
                + "Puntaje definido: " + puntaje + "\n"
                + "Jugador 1: " + alias1 + "\n"
                + "Jugador 2: " + alias2);

        this.setVisible(false);
        this.dispose();
        PantallaTablero tablero = new PantallaTablero(alias1, alias2, false, false);
        tablero.setVisible(true);

    } else if (esContraMaquina) {
        fechaNacimiento2 = "N/A";

        if (alias1.isEmpty() || fechaNacimiento1.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete la información del jugador humano.");
            return;
        }

        if (!esFechaValida(fechaNacimiento1)) {
            JOptionPane.showMessageDialog(this, "La fecha de nacimiento debe estar en formato dd/MM/yyyy.");
            return;
        }

        String aliasMaquina;
        try {
            aliasMaquina = NombresComputadoraTXT.obtenerNombreAleatorio();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al obtener el nombre de la máquina.");
            e.printStackTrace();
            return;
        }

        // Guardar la información en el archivo
        try {
            JugadoresHumanosTXT.registrarJugador(alias1, alias1, fechaNacimiento1, "Humano");
            JugadoresHumanosTXT.registrarJugador(aliasMaquina, aliasMaquina, "N/A", "Máquina");
            JugadoresHumanosTXT.registrarPartida(alias1, aliasMaquina, puntaje);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar la información en el archivo.");
            e.printStackTrace();
        }

        JOptionPane.showMessageDialog(this, "Partida iniciada con un jugador humano y la máquina.\n"
                + "Puntaje definido: " + puntaje + "\n"
                + "Jugador Humano: " + alias1 + "\n"
                + "Alias de la Máquina: " + aliasMaquina);

        this.setVisible(false);
        this.dispose();
        PantallaTablero tablero = new PantallaTablero(alias1, aliasMaquina, true, false);
        tablero.setVisible(true);
    }
}

// Método para validar si el texto es un número entero
private boolean esNumeroEntero(String texto) {
    try {
        Integer.parseInt(texto);
        return true;
    } catch (NumberFormatException e) {
        return false;
    }
}

// Método para validar la fecha
private boolean esFechaValida(String fecha) {
    SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
    formatoFecha.setLenient(false);
    try {
        formatoFecha.parse(fecha);
        return true;
    } catch (ParseException e) {
        return false;
    }
    }//GEN-LAST:event_btn_iniciarActionPerformed



    private void txt_alias2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_alias2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_alias2ActionPerformed

    private void btn_cargarpartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cargarpartidaActionPerformed
         File directorio = new File("src/partidasGuardada");
    
    // Verificamos que el directorio exista
    if (!directorio.exists() || !directorio.isDirectory()) {
        System.out.println("El directorio no existe o no es válido: " + directorio.getAbsolutePath());
        JOptionPane.showMessageDialog(this, "no existe partida guardada");
        return;
    }
     File[] archivosTxt = directorio.listFiles((dir, name) -> name.toLowerCase().endsWith(".txt"));
     if (archivosTxt != null && archivosTxt.length > 0) {
         
     }else{
          JOptionPane.showMessageDialog(this, "no existe partida guardada");
        return;
     }
     this.dispose();
     CargarPartida c = new CargarPartida();
    c.setSize(400, 300);
     c.setVisible(true); 
      
     
       
    
    }//GEN-LAST:event_btn_cargarpartidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cargarpartida;
    private javax.swing.JButton btn_iniciar;
    private javax.swing.JButton btn_pantallainformacion;
    private javax.swing.JButton btn_salirinicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton rb_2jugadores;
    private javax.swing.JRadioButton rb_maquina;
    private javax.swing.ButtonGroup rbg_selecciondejugadores;
    private javax.swing.JTextField txt_alias1;
    private javax.swing.JTextField txt_alias2;
    private javax.swing.JTextField txt_fecha1;
    private javax.swing.JTextField txt_fecha2;
    private javax.swing.JTextField txt_puntos;
    // End of variables declaration//GEN-END:variables
}
